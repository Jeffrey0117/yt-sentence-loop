"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/transcript/route";
exports.ids = ["app/api/transcript/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranscript%2Froute&page=%2Fapi%2Ftranscript%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranscript%2Froute.ts&appDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranscript%2Froute&page=%2Fapi%2Ftranscript%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranscript%2Froute.ts&appDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Jeffrey_Desktop_code_yt_sentence_loop_app_api_transcript_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/transcript/route.ts */ \"(rsc)/./app/api/transcript/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/transcript/route\",\n        pathname: \"/api/transcript\",\n        filename: \"route\",\n        bundlePath: \"app/api/transcript/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Jeffrey\\\\Desktop\\\\code\\\\yt-sentence-loop\\\\app\\\\api\\\\transcript\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Jeffrey_Desktop_code_yt_sentence_loop_app_api_transcript_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/transcript/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4yLjNfcmVhY3QtZG9tQDE4LjIuMF9yZWFjdEAxOC4yLjBfX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmFuc2NyaXB0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZ0cmFuc2NyaXB0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdHJhbnNjcmlwdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNKZWZmcmV5JTVDRGVza3RvcCU1Q2NvZGUlNUN5dC1zZW50ZW5jZS1sb29wJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNKZWZmcmV5JTVDRGVza3RvcCU1Q2NvZGUlNUN5dC1zZW50ZW5jZS1sb29wJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNtQztBQUNoSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3l0LXNlbnRlbmNlLWxvb3AvPzllZWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcSmVmZnJleVxcXFxEZXNrdG9wXFxcXGNvZGVcXFxceXQtc2VudGVuY2UtbG9vcFxcXFxhcHBcXFxcYXBpXFxcXHRyYW5zY3JpcHRcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RyYW5zY3JpcHQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cmFuc2NyaXB0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS90cmFuc2NyaXB0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcSmVmZnJleVxcXFxEZXNrdG9wXFxcXGNvZGVcXFxceXQtc2VudGVuY2UtbG9vcFxcXFxhcHBcXFxcYXBpXFxcXHRyYW5zY3JpcHRcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3RyYW5zY3JpcHQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranscript%2Froute&page=%2Fapi%2Ftranscript%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranscript%2Froute.ts&appDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/transcript/route.ts":
/*!*************************************!*\
  !*** ./app/api/transcript/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_transcript__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/transcript */ \"(rsc)/./lib/transcript.ts\");\n/* harmony import */ var _lib_transcriptCache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/transcriptCache */ \"(rsc)/./lib/transcriptCache.ts\");\n/* harmony import */ var _lib_vtt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/vtt */ \"(rsc)/./lib/vtt.ts\");\n\n\n\n\n// Helper function to convert cues to VTT format\nfunction cuesToVTT(cues) {\n    let vtt = \"WEBVTT\\n\\n\";\n    cues.forEach((cue, index)=>{\n        vtt += `${index + 1}\\n`;\n        vtt += `${formatTime(cue.start)} --> ${formatTime(cue.end)}\\n`;\n        vtt += `${cue.text}\\n\\n`;\n    });\n    return vtt;\n}\n// Helper function to format time in VTT format (HH:MM:SS.mmm)\nfunction formatTime(seconds) {\n    const date = new Date(0);\n    date.setSeconds(seconds);\n    return date.toISOString().substr(11, 12).replace(\".\", \",\");\n}\nconst dynamic = \"force-dynamic\";\nasync function GET(req) {\n    const videoId = req.nextUrl.searchParams.get(\"videoId\");\n    const lang = req.nextUrl.searchParams.get(\"lang\") || \"zh-TW,zh,en\";\n    // 預設強制刷新快取\n    const forceRefresh = req.nextUrl.searchParams.get(\"forceRefresh\") !== \"false\";\n    if (!videoId) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"missing videoId\"\n        }, {\n            status: 400\n        });\n    }\n    try {\n        // 強制刷新或使用快取\n        if (!forceRefresh) {\n            try {\n                // 先嘗試從快取讀取\n                const cached = await (0,_lib_transcriptCache__WEBPACK_IMPORTED_MODULE_2__.getOrCreateTranscript)(videoId, \"\");\n                if (cached) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        ...cached,\n                        source: \"cache\",\n                        timestamp: new Date().toISOString()\n                    });\n                }\n            } catch (error) {\n                console.warn(\"Cache read failed, falling back to fresh fetch:\", error);\n            }\n        }\n        // 從 YouTube 獲取新的字幕\n        console.log(`Fetching subtitles for video: ${videoId}`);\n        try {\n            const vttContent = await (0,_lib_transcript__WEBPACK_IMPORTED_MODULE_1__.getTranscriptByYtDlp)(videoId, String(lang));\n            if (!vttContent) {\n                console.error(\"No subtitle content returned from getTranscriptByYtDlp\");\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"No subtitles available\",\n                    message: \"This video may not have subtitles or they may be disabled.\"\n                }, {\n                    status: 404\n                });\n            }\n            console.log(\"Successfully fetched VTT content, length:\", vttContent.length);\n            // 解析 VTT 內容\n            console.log(\"Parsing VTT content...\");\n            const cues = (0,_lib_vtt__WEBPACK_IMPORTED_MODULE_3__.parseVTT)(vttContent);\n            if (!cues || cues.length === 0) {\n                console.error(\"No cues found in VTT content\");\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"No subtitles found\",\n                    message: \"The video appears to have subtitles but they could not be parsed.\"\n                }, {\n                    status: 400\n                });\n            }\n            console.log(`Successfully parsed ${cues.length} cues`);\n            // 處理並快取字幕\n            console.log(\"Caching transcript...\");\n            const result = await (0,_lib_transcriptCache__WEBPACK_IMPORTED_MODULE_2__.getOrCreateTranscript)(videoId, vttContent);\n            console.log(\"Transcript cached successfully\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                ...result,\n                source: \"yt-dlp\",\n                timestamp: new Date().toISOString()\n            });\n        } catch (error) {\n            console.error(\"Error processing transcript:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to process transcript\",\n                details: error instanceof Error ? error.message : \"Unknown error occurred\"\n            }, {\n                status: 500\n            });\n        }\n    } catch (e) {\n        console.error(\"Transcript error:\", e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: e?.message || \"Failed to process transcript\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/transcript/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/transcript.ts":
/*!***************************!*\
  !*** ./lib/transcript.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTranscriptByYtDlp: () => (/* binding */ getTranscriptByYtDlp)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _vtt__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vtt */ \"(rsc)/./lib/vtt.ts\");\n\n\n\n\n\nasync function getTranscriptByYtDlp(videoId, lang = \"en,*\") {\n    const workdir = await fs_promises__WEBPACK_IMPORTED_MODULE_1___default().mkdtemp(path__WEBPACK_IMPORTED_MODULE_2___default().join(os__WEBPACK_IMPORTED_MODULE_3___default().tmpdir(), \"yt-vtt-\"));\n    const url = `https://www.youtube.com/watch?v=${videoId}`;\n    try {\n        // 優先作者字幕，否則自動字幕；輸出成    // 首先檢查是否有可用的字幕\n        const listArgs = [\n            \"--list-subs\",\n            \"--skip-download\",\n            url\n        ];\n        console.log(\"Checking available subtitles...\");\n        const listProcess = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.spawn)(\"yt-dlp\", listArgs, {\n            stdio: [\n                \"ignore\",\n                \"pipe\",\n                \"pipe\"\n            ]\n        });\n        let hasSubtitles = false;\n        let output = \"\";\n        for await (const data of listProcess.stdout){\n            const text = data.toString();\n            output += text;\n            // 檢查是否有可用的字幕（包括自動字幕和人工字幕）\n            if (text.includes(\"Available subtitles for\") || text.includes(\"Available automatic captions\") || text.match(/\\w+\\s+\\w+\\s+[\\w-]+/)) {\n                hasSubtitles = true;\n            }\n        }\n        // 等待進程完成\n        await new Promise((resolve, reject)=>{\n            listProcess.on(\"close\", (code)=>{\n                if (code === 0) resolve(code);\n                else reject(new Error(`yt-dlp list-subs failed with code ${code}`));\n            });\n        });\n        if (!hasSubtitles) {\n            console.log(\"No subtitles available for this video. Output:\", output);\n            throw new Error(\"No subtitles available for this video. The video may not have subtitles enabled.\");\n        }\n        console.log(\"Subtitles available, proceeding with download...\");\n        // 下載字幕的參數，添加速率限制和重試機制\n        const args = [\n            url,\n            \"--skip-download\",\n            \"--sub-lang\",\n            \"en,zh-TW,zh-Hant,zh,en-US,en-UK,en-GB,en-CA,en-AU,en-NZ,en-IE,en-ZA,en-JM,en-BZ,en-TT,zh-Hans,zh-CN,zh-SG,zh-HK,zh-MO,zh-TW\",\n            \"--write-sub\",\n            \"--write-auto-sub\",\n            \"--sub-format\",\n            \"vtt\",\n            \"--convert-subs\",\n            \"vtt\",\n            \"-o\",\n            path__WEBPACK_IMPORTED_MODULE_2___default().join(workdir, \"%(id)s.%(ext)s\"),\n            \"--no-warnings\",\n            \"--no-check-certificate\",\n            \"--ignore-errors\",\n            \"--no-call-home\",\n            \"--no-progress\",\n            \"--sleep-interval\",\n            \"1\",\n            \"--max-sleep-interval\",\n            \"5\",\n            \"--retries\",\n            \"3\",\n            \"--extractor-retries\",\n            \"3\",\n            \"--user-agent\",\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n        ];\n        console.log(\"Running yt-dlp with args:\", args.join(\" \"));\n        console.log(`Downloading subtitles for video: ${videoId}`);\n        await run(\"yt-dlp\", args);\n        // 找出所有可能的字幕文件\n        const files = await fs_promises__WEBPACK_IMPORTED_MODULE_1___default().readdir(workdir);\n        console.log(\"All files in temp directory:\", files);\n        // 嘗試查找任何字幕文件\n        const subtitleExtensions = [\n            \".vtt\",\n            \".srt\",\n            \".ass\",\n            \".ssa\",\n            \".vtt.yt-dlp\",\n            \".srt.yt-dlp\"\n        ];\n        const subtitleFiles = files.filter((f)=>subtitleExtensions.some((ext)=>f.endsWith(ext)));\n        if (subtitleFiles.length === 0) {\n            console.error(\"No subtitle files found in:\", workdir);\n            console.log(\"Available files:\", files);\n            // 嘗試獲取視頻信息以提供更好的錯誤信息\n            const infoArgs = [\n                \"--skip-download\",\n                \"--dump-json\",\n                \"--no-warnings\",\n                url\n            ];\n            try {\n                const infoOutput = await new Promise((resolve, reject)=>{\n                    const infoProcess = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.spawn)(\"yt-dlp\", infoArgs, {\n                        stdio: [\n                            \"ignore\",\n                            \"pipe\",\n                            \"pipe\"\n                        ]\n                    });\n                    let output = \"\";\n                    infoProcess.stdout.on(\"data\", (data)=>output += data.toString());\n                    infoProcess.stderr.on(\"data\", (data)=>console.error(\"yt-dlp stderr:\", data.toString()));\n                    infoProcess.on(\"close\", (code)=>{\n                        if (code === 0) resolve(output);\n                        else reject(new Error(`yt-dlp info failed with code ${code}`));\n                    });\n                });\n                const videoInfo = JSON.parse(infoOutput);\n                console.log(\"Video info:\", {\n                    title: videoInfo.title,\n                    duration: videoInfo.duration,\n                    uploader: videoInfo.uploader,\n                    is_live: videoInfo.is_live\n                });\n                // 檢查是否是直播或即將直播的視頻\n                if (videoInfo.is_live || videoInfo.live_status === \"is_upcoming\") {\n                    throw new Error(\"This is a live or upcoming stream. Subtitles are typically not available for live content.\");\n                }\n                // 檢查視頻時長\n                if (videoInfo.duration < 30) {\n                    throw new Error(\"This video is very short. Subtitles may not be available for very short videos.\");\n                }\n                // 檢查視頻是否被下架或私密\n                if (videoInfo.availability === \"private\" || videoInfo.availability === \"unlisted\") {\n                    throw new Error(\"This video is private or unlisted. Subtitles may not be available.\");\n                }\n            } catch (error) {\n                console.error(\"Error getting video info:\", error);\n            // 繼續使用通用錯誤信息\n            }\n            throw new Error(`No subtitles available for this video. The video may not have subtitles enabled or they may be restricted.`);\n        }\n        console.log(\"Found subtitle files:\", subtitleFiles);\n        const vtts = subtitleFiles; // 使用找到的所有字幕文件\n        // 按語言優先級排序\n        vtts.sort((a, b)=>{\n            const langOrder = [\n                \"zh-TW\",\n                \"zh-Hant\",\n                \"zh\",\n                \"en\",\n                \"a.*\"\n            ];\n            const aLang = a.split(\".\")[1] || \"\";\n            const bLang = b.split(\".\")[1] || \"\";\n            return langOrder.indexOf(aLang) - langOrder.indexOf(bLang);\n        });\n        // 讀取第一個可用的 VTT 文件\n        const file = path__WEBPACK_IMPORTED_MODULE_2___default().join(workdir, vtts[0]);\n        console.log(`Using subtitle file: ${file}`);\n        const text = await fs_promises__WEBPACK_IMPORTED_MODULE_1___default().readFile(file, \"utf8\");\n        // 清理 VTT 內容\n        const cleanedText = text.replace(/^WEBVTT.*\\n\\n/, \"\") // 移除 WEBVTT 標頭\n        .replace(/\\r\\n/g, \"\\n\") // 統一換行符\n        .replace(/\\r/g, \"\\n\").replace(/^\\s+/, \"\") // 移除開頭空白\n        .replace(/\\s+$/, \"\"); // 移除結尾空白\n        console.log(\"VTT content length:\", cleanedText.length);\n        // 解析 VTT 內容\n        const cues = (0,_vtt__WEBPACK_IMPORTED_MODULE_4__.parseVTT)(cleanedText);\n        if (cues.length === 0) {\n            console.warn(\"No cues found in VTT content\");\n        } else {\n            console.log(`Parsed ${cues.length} cues from VTT`);\n        }\n        return cleanedText; // 返回原始 VTT 內容，由 parseVTT 處理\n    } catch (error) {\n        console.error(\"Error in getTranscriptByYtDlp:\", error);\n        throw error;\n    } finally{\n        // 清理暫存目錄\n        try {\n            await fs_promises__WEBPACK_IMPORTED_MODULE_1___default().rm(workdir, {\n                recursive: true,\n                force: true\n            });\n        } catch (error) {\n            console.warn(\"Failed to clean up temp directory:\", error);\n        }\n    }\n}\nasync function run(cmd, args) {\n    return new Promise((resolve, reject)=>{\n        const p = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.spawn)(cmd, args, {\n            stdio: [\n                \"ignore\",\n                \"pipe\",\n                \"pipe\"\n            ]\n        });\n        let stdout = \"\";\n        let stderr = \"\";\n        p.stdout?.on(\"data\", (data)=>{\n            const text = data.toString();\n            stdout += text;\n            console.log(text);\n        });\n        p.stderr?.on(\"data\", (data)=>{\n            const text = data.toString();\n            stderr += text;\n            console.error(text);\n        });\n        p.on(\"error\", reject);\n        p.on(\"exit\", (code)=>{\n            if (code === 0) {\n                resolve();\n            } else {\n                reject(new Error(`${cmd} exit ${code}. stderr: ${stderr}`));\n            }\n        });\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/transcript.ts\n");

/***/ }),

/***/ "(rsc)/./lib/transcriptCache.ts":
/*!********************************!*\
  !*** ./lib/transcriptCache.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOrCreateTranscript: () => (/* binding */ getOrCreateTranscript)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _vtt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vtt */ \"(rsc)/./lib/vtt.ts\");\n\n\n\nconst CACHE_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \".cache\", \"transcripts\");\n// 確保快取目錄存在\nasync function ensureCacheDir() {\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().mkdir(CACHE_DIR, {\n            recursive: true\n        });\n    } catch (error) {\n        console.error(\"Failed to create cache directory:\", error);\n    }\n}\n// 生成快取檔案名稱\nfunction getCacheFilename(videoId) {\n    return path__WEBPACK_IMPORTED_MODULE_1___default().join(CACHE_DIR, `${videoId}.json`);\n}\n// 檢查快取是否存在\nasync function hasCache(videoId) {\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().access(getCacheFilename(videoId));\n        return true;\n    } catch  {\n        return false;\n    }\n}\n// 讀取快取\nasync function readCache(videoId) {\n    try {\n        const cacheFile = getCacheFilename(videoId);\n        const data = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(cacheFile, \"utf-8\");\n        return JSON.parse(data);\n    } catch (error) {\n        console.error(\"Failed to read cache:\", error);\n        return null;\n    }\n}\n// 寫入快取\nasync function writeCache(videoId, data) {\n    try {\n        await ensureCacheDir();\n        const cacheFile = getCacheFilename(videoId);\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(cacheFile, JSON.stringify(data, null, 2), \"utf-8\");\n    } catch (error) {\n        console.error(\"Failed to write cache:\", error);\n    }\n}\n// 清理 VTT 文本，移除重複內容和時間標記\nfunction cleanTranscriptText(text) {\n    // 移除時間標記 <00:00:00.000>\n    let cleaned = text.replace(/<\\d{1,2}:\\d{2}:\\d{2}[\\.\\,]\\d{3}>/g, \"\");\n    // 移除 <c> 標籤\n    cleaned = cleaned.replace(/<\\/?c>/g, \"\");\n    // 移除其他 HTML 標籤\n    cleaned = cleaned.replace(/<[^>]+>/g, \"\");\n    // 合併多個空白字元\n    cleaned = cleaned.replace(/\\s+/g, \" \").trim();\n    return cleaned;\n}\n// 處理 VTT 並快取結果\nasync function getOrCreateTranscript(videoId, vttContent) {\n    // 檢查是否有快取\n    if (vttContent === \"\" && await hasCache(videoId)) {\n        try {\n            return await readCache(videoId);\n        } catch (error) {\n            console.warn(\"Failed to read from cache, regenerating...\", error);\n        // 繼續生成新的快取\n        }\n    }\n    // 如果沒有提供 VTT 內容，返回空結果\n    if (!vttContent) {\n        return {\n            videoId,\n            cues: [],\n            timestamp: new Date().toISOString()\n        };\n    }\n    // 解析 VTT\n    let cues;\n    try {\n        cues = (0,_vtt__WEBPACK_IMPORTED_MODULE_2__.parseVTT)(vttContent);\n    } catch (error) {\n        console.error(\"Failed to parse VTT content:\", error);\n        throw new Error(\"Invalid VTT content\");\n    }\n    // 清理文本\n    const cleanedCues = cues.map((cue)=>({\n            ...cue,\n            text: cleanTranscriptText(cue.text)\n        })).filter((cue)=>cue.text.trim().length > 0);\n    // 移除重複的句子\n    const uniqueCues = [];\n    const seenTexts = new Set();\n    for (const cue of cleanedCues){\n        if (!seenTexts.has(cue.text) && cue.text.trim().length > 0) {\n            seenTexts.add(cue.text);\n            uniqueCues.push(cue);\n        }\n    }\n    // 合併連續的相同句子\n    const mergedCues = [];\n    let lastCue = null;\n    for (const cue of uniqueCues){\n        if (!lastCue || lastCue.text !== cue.text) {\n            lastCue = {\n                ...cue\n            };\n            mergedCues.push(lastCue);\n        } else {\n            // 合併時間範圍\n            lastCue.end = Math.max(lastCue.end, cue.end);\n        }\n    }\n    const result = {\n        videoId,\n        cues: mergedCues,\n        timestamp: new Date().toISOString()\n    };\n    // 寫入快取\n    await writeCache(videoId, result);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/transcriptCache.ts\n");

/***/ }),

/***/ "(rsc)/./lib/vtt.ts":
/*!********************!*\
  !*** ./lib/vtt.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseVTT: () => (/* binding */ parseVTT)\n/* harmony export */ });\n// 簡易 VTT 解析：轉 { start, end, text }\nfunction parseVTT(vtt) {\n    if (!vtt || typeof vtt !== \"string\") {\n        console.error(\"Invalid VTT content\");\n        return [];\n    }\n    // 正規化換行符號並分割成行\n    const lines = vtt.replace(/\\r\\n/g, \"\\n\") // 將 Windows 換行轉換為 Unix 換行\n    .replace(/\\r/g, \"\\n\") // 處理 Mac 舊版換行\n    .split(\"\\n\");\n    const cues = [];\n    let i = 0;\n    // 時間戳記匹配\n    const timeRegex = /^(\\d{1,3}:)?\\d{1,2}:\\d{2}[\\.\\,]\\d{1,3}\\s*-+>\\s*(\\d{1,3}:)?\\d{1,2}:\\d{2}[\\.\\,]\\d{1,3}/;\n    while(i < lines.length){\n        const line = lines[i].trim();\n        // 跳過空行和註解\n        if (!line || line.startsWith(\"NOTE\") || line.startsWith(\"STYLE\") || line.startsWith(\"REGION\")) {\n            i++;\n            continue;\n        }\n        // 檢查是否為時間戳記行\n        if (timeRegex.test(line)) {\n            // 分割時間戳記\n            const timeParts = line.split(/\\s*-+>\\s*/);\n            if (timeParts.length < 2) {\n                i++;\n                continue;\n            }\n            const s = timeParts[0].trim();\n            const e = timeParts[1].split(/\\s+/)[0].trim();\n            i++;\n            // 收集所有文本行\n            const textLines = [];\n            while(i < lines.length && lines[i].trim() !== \"\"){\n                textLines.push(lines[i].trim());\n                i++;\n            }\n            // 合併文本行，只做基本清理\n            let t = textLines.map((line)=>line// 移除 HTML 標籤\n                .replace(/<[^>]+>/g, \"\")// 處理基本特殊字符\n                .replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").trim()).filter((line)=>line.length > 0).join(\" \").replace(/\\s+/g, \" \").trim();\n            // 計算時間（秒）\n            const start = toSec(s);\n            const end = toSec(e) || start + 2; // 如果結束時間無效，使用開始時間+2秒\n            // 添加字幕\n            if (t) {\n                cues.push({\n                    start: parseFloat(start.toFixed(3)),\n                    end: parseFloat(end.toFixed(3)),\n                    text: t\n                });\n            }\n        } else {\n            i++;\n        }\n    }\n    return cues;\n    // 1. 先按開始時間排序\n    const initialSortedCues = [\n        ...cues\n    ].sort((a, b)=>a.start - b.start || a.end - b.end);\n    // 2. 合併重疊或連續的時間段\n    const mergedTimeRanges = [];\n    for (const cue of initialSortedCues){\n        // 跳過空文本\n        const trimmedText = cue.text.trim();\n        if (!trimmedText) continue;\n        // 尋找重疊或連續的時間段\n        let mergedIndex = -1;\n        for(let i = 0; i < mergedTimeRanges.length; i++){\n            const m = mergedTimeRanges[i];\n            // 檢查是否有重疊或連續（前後1秒內）\n            if (cue.start <= m.end + 1 && cue.end >= m.start - 1) {\n                mergedIndex = i;\n                break;\n            }\n        }\n        if (mergedIndex >= 0) {\n            // 合併到現有時間段\n            const m = mergedTimeRanges[mergedIndex];\n            m.start = Math.min(m.start, cue.start);\n            m.end = Math.max(m.end, cue.end);\n            m.texts.push(trimmedText);\n        } else {\n            // 創建新的時間段\n            mergedTimeRanges.push({\n                start: cue.start,\n                end: cue.end,\n                texts: [\n                    trimmedText\n                ]\n            });\n        }\n    }\n    // 3. 對每個合併後的時間段，選擇最完整的文本\n    const processedCues = mergedTimeRanges.map((group)=>{\n        // 過濾掉重複的文本（保留最長的）\n        const uniqueTexts = Array.from(new Set(group.texts));\n        const bestText = uniqueTexts.reduce((best, current)=>current.length > best.length ? current : best);\n        // 清理文本\n        const cleanedText = bestText.replace(/\\s+/g, \" \") // 合併多個空白\n        .replace(/^\\s+|\\s+$/g, \"\") // 移除首尾空白\n        .replace(/\\.{2,}/g, \".\") // 合併多個句點\n        .replace(/\\s*[\\.,;:]\\s*/g, (match)=>match.trim() + \" \") // 標準化標點符號後的空白\n        .trim();\n        return {\n            start: group.start,\n            end: group.end,\n            text: cleanedText\n        };\n    });\n    // 4. 合併重疊的時間段，創建連續的時間軸\n    const timeline = [];\n    // 首先按開始時間排序\n    const finalSortedCues = [\n        ...processedCues\n    ].sort((a, b)=>a.start - b.start || a.end - b.end);\n    if (finalSortedCues.length > 0) {\n        // 初始化第一個時間段\n        let current = {\n            ...finalSortedCues[0]\n        };\n        for(let i = 1; i < finalSortedCues.length; i++){\n            const next = finalSortedCues[i];\n            // 如果下一個字幕與當前時間段重疊或連續\n            if (next.start <= current.end + 0.5) {\n                // 合併文本，用空格分隔\n                current.text = `${current.text} ${next.text}`.replace(/\\s+/g, \" \").trim();\n                // 擴展當前時間段的結束時間\n                current.end = Math.max(current.end, next.end);\n            } else {\n                // 保存當前時間段\n                timeline.push({\n                    ...current\n                });\n                // 開始新的時間段\n                current = {\n                    ...next\n                };\n            }\n        }\n        // 添加最後一個時間段\n        timeline.push(current);\n    }\n    // 5. 將合併後的時間段分割成不重疊的區間\n    const finalResult = [];\n    for(let i = 0; i < timeline.length; i++){\n        const current = timeline[i];\n        // 如果是第一個時間段，直接添加\n        if (i === 0) {\n            finalResult.push({\n                ...current\n            });\n            continue;\n        }\n        const prev = finalResult[finalResult.length - 1];\n        // 確保時間段不重疊\n        if (current.start < prev.end) {\n            // 調整前一個時間段的結束時間\n            prev.end = current.start;\n        }\n        // 添加當前時間段\n        finalResult.push({\n            ...current\n        });\n    }\n    // 6. 清理並合併相鄰的相同文本\n    const cleanedResult = [];\n    for (const cue of finalResult){\n        if (cleanedResult.length === 0) {\n            cleanedResult.push({\n                ...cue\n            });\n            continue;\n        }\n        const last = cleanedResult[cleanedResult.length - 1];\n        // 如果文本相同且時間連續，則合併\n        if (last.text === cue.text && last.end === cue.start) {\n            last.end = cue.end;\n        } else {\n            cleanedResult.push({\n                ...cue\n            });\n        }\n    }\n    return cleanedResult;\n}\nfunction toSec(timeStr) {\n    if (!timeStr) return 0;\n    // 處理逗號或點作為小數點分隔符\n    timeStr = timeStr.trim().replace(\",\", \".\");\n    // 匹配 hh:mm:ss.mmm 或 mm:ss.mmm 或 ss.mmm\n    const timeParts = timeStr.split(\":\");\n    let seconds = 0;\n    if (timeParts.length === 3) {\n        // 格式: hh:mm:ss.mmm\n        seconds += parseInt(timeParts[0], 10) * 3600; // 小時\n        seconds += parseInt(timeParts[1], 10) * 60; // 分鐘\n        seconds += parseFloat(timeParts[2]); // 秒 + 毫秒\n    } else if (timeParts.length === 2) {\n        // 格式: mm:ss.mmm\n        seconds += parseInt(timeParts[0], 10) * 60; // 分鐘\n        seconds += parseFloat(timeParts[1]); // 秒 + 毫秒\n    } else if (timeParts.length === 1) {\n        // 格式: ss.mmm\n        seconds = parseFloat(timeParts[0]);\n    }\n    // 確保不會返回 NaN 或負數\n    return isNaN(seconds) || seconds < 0 ? 0 : seconds;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/vtt.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranscript%2Froute&page=%2Fapi%2Ftranscript%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranscript%2Froute.ts&appDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJeffrey%5CDesktop%5Ccode%5Cyt-sentence-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();